from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP

# Function to process captured packets
def process_packet(packet):
    if IP in packet:
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        proto = packet[IP].proto

        print(f"Source IP: {src_ip}, Destination IP: {dst_ip}, Protocol: {proto}")

        if TCP in packet:
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            print(f"Source Port: {src_port}, Destination Port: {dst_port}")

            if packet.payload:
                print("Payload Data:")
                print(packet.payload)

        elif UDP in packet:
            src_port = packet[UDP].sport
            dst_port = packet[UDP].dport
            print(f"Source Port: {src_port}, Destination Port: {dst_port}")

            if packet.payload:
                print("Payload Data:")
                print(packet.payload)

# Sniff packets and process them
sniff(prn=process_packet, count=10)  # Capture 10 packets
